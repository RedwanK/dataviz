
services:
###> doctrine/doctrine-bundle ###
  database:
    image: timescale/timescaledb:2.14.2-pg16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

###> symfony/mercure-bundle ###
  mercure:
    image: dunglas/mercure
    restart: unless-stopped
    environment:
      # Disable HTTPS in dev and serve on port 80
      SERVER_NAME: ${MERCURE_SERVER_NAME:-:8080}
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_PUBLISHER_JWT_KEY:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_SUBSCRIBER_JWT_KEY:-!ChangeThisMercureHubJWTSecretKey!}
      # CORS origins for your Symfony app (no trailing slash)
      MERCURE_EXTRA_DIRECTIVES: |
        cors_origins ${MERCURE_CORS_ORIGINS:-http://127.0.0.1:8000}
    # Development mode
    command: /usr/bin/caddy run --config /etc/caddy/dev.Caddyfile
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/healthz:8080"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - mercure_data:/data
      - mercure_config:/config
###< symfony/mercure-bundle ###

  mqtt:
    build:
      context: ./docker/mosquitto
    restart: unless-stopped
    environment:
      MQTT_USERNAME: ${MQTT_USERNAME:-}
      MQTT_PASSWORD: ${MQTT_PASSWORD:-}
      MQTT_PORT: ${MQTT_PORT:-1883}
    volumes:
      - mosquitto_data:/mosquitto/data
      - mosquitto_log:/mosquitto/log

  mqtt-bridge:
    build:
      context: ./docker/mqtt-bridge
    restart: unless-stopped
    depends_on:
      - mqtt
      - mercure
      - database
      - redis
    environment:
      APP_ENV: ${APP_ENV:-dev}
      # Use internal Docker DNS to reach Mercure from inside the container
      MERCURE_URL: http://mercure/.well-known/mercure
      MERCURE_PUBLIC_URL: ${MERCURE_PUBLIC_URL:-http://127.0.0.1:${MERCURE_PORT:-8080}/.well-known/mercure}
      MQTT_HOST: ${MQTT_HOST:-mqtt}
      MQTT_PORT: ${MQTT_PORT:-1883}
      MQTT_USERNAME: ${MQTT_USERNAME:-}
      MQTT_PASSWORD: ${MQTT_PASSWORD:-}
      MQTT_TOPICS: ${MQTT_BRIDGE_TOPICS:-#}
      # Ensure Messenger (doctrine transport) can reach DB from inside container
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}?serverVersion=${POSTGRES_VERSION:-16}&charset=utf8"
      # Supervisor worker settings (optional overrides)
      WORKER_COUNT: ${MQTT_BRIDGE_WORKER_COUNT:-4}
      CONSUME_TRANSPORTS: ${MQTT_BRIDGE_CONSUME_TRANSPORTS:-async}
      CONSUMER_OPTIONS: ${MQTT_BRIDGE_CONSUMER_OPTIONS:---time-limit=3600 --memory-limit=256M --no-interaction}
    volumes:
      - ./:/app:rw

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###

###> symfony/mercure-bundle ###
  mercure_data:
  mercure_config:
###< symfony/mercure-bundle ###

  mosquitto_data:
  mosquitto_log:
  redis_data:
